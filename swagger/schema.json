{
    "openapi": "3.0.0",
    "info": {
        "title": "Atlas Bus",
        "description": "Atlas Bus API",
        "version": "0.1.0",
        "contact": {}
    },
    "tags": [
        {
            "name": "Api",
            "description": "Application purpose"
        },
        {
            "name": "Nest.js",
            "description": "Framework"
        }
    ],
    "servers": [],
    "components": {
        "schemas": {
            "ValidationResultDto": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "property": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": ["message"]
            },
            "ErrorResponseDto": {
                "type": "object",
                "properties": {
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ValidationResultDto"
                        }
                    },
                    "path": {
                        "type": "string"
                    },
                    "statusCode": {
                        "type": "number"
                    },
                    "timestamp": {
                        "type": "string"
                    }
                },
                "required": ["errors", "path", "statusCode", "timestamp"]
            },
            "StopsDto": {
                "type": "object",
                "properties": {
                    "latitude": {
                        "type": "number",
                        "format": "float"
                    },
                    "longitude": {
                        "type": "number",
                        "format": "float"
                    },
                    "datetime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "timezone": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "desc": {
                        "type": "string"
                    },
                    "info": {
                        "type": "string"
                    },
                    "important": {
                        "type": "boolean"
                    },
                    "dynamic": {
                        "type": "boolean"
                    },
                    "seating": {
                        "type": "boolean",
                        "default": false
                    }
                },
                "required": [
                    "latitude",
                    "longitude",
                    "datetime",
                    "timezone",
                    "id",
                    "desc",
                    "important",
                    "dynamic"
                ]
            },
            "LegalSchemaDto": {
                "type": "object",
                "properties": {
                    "tin": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "SearchSchemaAnimalsDto": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "available": {
                        "type": "boolean"
                    }
                }
            },
            "SearchSchemaLuggageDto": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "available": {
                        "type": "boolean"
                    }
                }
            },
            "BusColorDto": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "BusDto": {
                "type": "object",
                "properties": {
                    "color": {
                        "$ref": "#/components/schemas/BusColorDto"
                    },
                    "model": {
                        "type": "string",
                        "nullable": true
                    },
                    "mark": {
                        "type": "string",
                        "nullable": true
                    },
                    "reg": {
                        "type": "string",
                        "nullable": true
                    },
                    "branding": {
                        "type": "string",
                        "enum": [
                            "full_branding",
                            "part_branding",
                            "magnet_branding",
                            "no_branding"
                        ]
                    }
                }
            },
            "DestinationDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "desc": {
                        "type": "string"
                    },
                    "timezone": {
                        "type": "string"
                    }
                },
                "required": ["id", "desc", "timezone"]
            },
            "SearchAtlasMilesDto": {
                "type": "object",
                "properties": {
                    "card": {
                        "type": "number"
                    },
                    "cash": {
                        "type": "number"
                    }
                }
            },
            "SearchAtlasMetaDto": {
                "type": "object",
                "properties": {
                    "miles": {
                        "$ref": "#/components/schemas/SearchAtlasMilesDto"
                    }
                }
            },
            "FreighterDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number"
                    },
                    "name": {
                        "type": "string"
                    },
                    "kpp": {
                        "type": "string"
                    },
                    "inn": {
                        "type": "string"
                    },
                    "ogrn": {
                        "type": "string"
                    },
                    "regDate": {
                        "type": "string"
                    },
                    "authority": {
                        "type": "string"
                    },
                    "unp": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "workingTime": {
                        "type": "string"
                    },
                    "license": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "kpp",
                    "inn",
                    "ogrn",
                    "regDate",
                    "authority",
                    "unp",
                    "address",
                    "workingTime",
                    "license"
                ]
            },
            "DynamicConfigDto": {
                "type": "object",
                "properties": {
                    "prepareTime": {
                        "type": "number",
                        "description": "За какое время до отправления формируется маршрут (в минутах)"
                    }
                },
                "required": ["prepareTime"]
            },
            "DriverDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "avatar": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    }
                }
            },
            "SeatingCellDto": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Тип места"
                    },
                    "along": {
                        "type": "number",
                        "description": "Номер места в вдоль"
                    },
                    "across": {
                        "type": "number",
                        "description": "Номер места поперек"
                    },
                    "number": {
                        "type": "number",
                        "description": "Номер места"
                    },
                    "status": {
                        "type": "string",
                        "description": "Статус места"
                    }
                },
                "required": ["type", "along", "across"]
            },
            "SeatingGroupDto": {
                "type": "object",
                "properties": {
                    "along": {
                        "type": "number",
                        "description": "Количество мест вдоль"
                    },
                    "across": {
                        "type": "number",
                        "description": "Количество мест поперек"
                    },
                    "cells": {
                        "description": "Данные о местах",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SeatingCellDto"
                        }
                    }
                },
                "required": ["along", "across", "cells"]
            },
            "SeatingSchemeDto": {
                "type": "object",
                "properties": {
                    "label": {
                        "type": "string",
                        "description": "Идентификатор схемы"
                    },
                    "groups": {
                        "description": "Группы мест",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SeatingGroupDto"
                        }
                    }
                },
                "required": ["label"]
            },
            "FrameSettingsDto": {
                "type": "object",
                "properties": {
                    "use": {
                        "type": "boolean",
                        "description": "Выделен ли рейс в рамке",
                        "default": false
                    },
                    "title": {
                        "type": "string",
                        "description": "Заголовок рамки",
                        "default": ""
                    },
                    "slogan": {
                        "type": "string",
                        "description": "Слоган рамки",
                        "default": ""
                    },
                    "colorCode1": {
                        "type": "string",
                        "description": "Цвет рамки 1",
                        "default": ""
                    },
                    "colorCode2": {
                        "type": "string",
                        "description": "Цвет рамки 2",
                        "default": ""
                    },
                    "templateId": {
                        "type": "number",
                        "description": "Идентификатор цветового шаблона",
                        "default": 0
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Название цветового шаблона",
                        "default": ""
                    }
                },
                "required": ["use"]
            },
            "SearchDto": {
                "type": "object",
                "properties": {
                    "pickupStops": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StopsDto"
                        }
                    },
                    "dischargeStops": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StopsDto"
                        }
                    },
                    "saasId": {
                        "type": "string"
                    },
                    "legal": {
                        "$ref": "#/components/schemas/LegalSchemaDto"
                    },
                    "animals": {
                        "$ref": "#/components/schemas/SearchSchemaAnimalsDto"
                    },
                    "luggage": {
                        "$ref": "#/components/schemas/SearchSchemaLuggageDto"
                    },
                    "partner": {
                        "type": "string"
                    },
                    "partnerName": {
                        "type": "string"
                    },
                    "carrier_phones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "paymentTypes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "card",
                                "miles",
                                "cash",
                                "reccur",
                                "atlas_promocode"
                            ]
                        }
                    },
                    "refundConditions": {
                        "type": "string",
                        "default": "Комиссия за возврат составляет: 5% в случае возврата более чем за 2 часа до отправления 15% в течение 2 часов до отправления 25% в течение 3 часов после отправления Возврат на сайте возможен не позднее чем за 15 минут до отправления рейса, в остальное время возврат можно сделать на автовокзале. В случае отмены рейса возврат комиссией не облагается."
                    },
                    "fee": {
                        "type": "number",
                        "format": "float"
                    },
                    "id": {
                        "type": "string"
                    },
                    "carrier": {
                        "type": "string"
                    },
                    "carrierID": {
                        "type": "string"
                    },
                    "onlinePrice": {
                        "type": "number"
                    },
                    "bus": {
                        "$ref": "#/components/schemas/BusDto"
                    },
                    "from": {
                        "$ref": "#/components/schemas/DestinationDto"
                    },
                    "valid_before": {
                        "type": "number"
                    },
                    "to": {
                        "$ref": "#/components/schemas/DestinationDto"
                    },
                    "departure": {
                        "type": "string"
                    },
                    "arrival": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string",
                        "default": "RUB"
                    },
                    "price": {
                        "type": "number"
                    },
                    "freeSeats": {
                        "type": "number",
                        "format": "int32"
                    },
                    "ticketLimit": {
                        "type": "number"
                    },
                    "onlineRefund": {
                        "type": "boolean",
                        "default": true
                    },
                    "bookFields": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "phone",
                                "birthDate",
                                "surname",
                                "document",
                                "email",
                                "gender",
                                "name",
                                "patronymic",
                                "citizenship"
                            ]
                        }
                    },
                    "benefits": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "charger",
                                "express",
                                "tv",
                                "press",
                                "child-seat",
                                "air",
                                "220v",
                                "armch",
                                "wifi",
                                "coffee",
                                "no-ticket-required",
                                "desinfection",
                                "big-bus",
                                "meteor"
                            ]
                        }
                    },
                    "rideType": {
                        "type": "string",
                        "enum": ["shuttle", "charter", "regular"]
                    },
                    "connector": {
                        "type": "string"
                    },
                    "atlasMeta": {
                        "$ref": "#/components/schemas/SearchAtlasMetaDto"
                    },
                    "freighter": {
                        "$ref": "#/components/schemas/FreighterDto"
                    },
                    "saleTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "flightPopular": {
                        "type": "number",
                        "enum": [-1, 0, 1]
                    },
                    "dynamicMode": {
                        "type": "boolean"
                    },
                    "dynamicConfig": {
                        "$ref": "#/components/schemas/DynamicConfigDto"
                    },
                    "driver": {
                        "$ref": "#/components/schemas/DriverDto"
                    },
                    "seatingScheme": {
                        "default": [],
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SeatingSchemeDto"
                        }
                    },
                    "seatingRequired": {
                        "type": "boolean",
                        "default": false
                    },
                    "frame": {
                        "default": {
                            "use": false
                        },
                        "$ref": "#/components/schemas/FrameSettingsDto"
                    }
                },
                "required": [
                    "saasId",
                    "partnerName",
                    "paymentTypes",
                    "id",
                    "carrier",
                    "from",
                    "valid_before",
                    "to",
                    "departure",
                    "currency",
                    "price",
                    "freeSeats",
                    "bookFields",
                    "rideType",
                    "connector",
                    "saleTypes",
                    "dynamicMode",
                    "dynamicConfig"
                ]
            },
            "CalendarPriceDto": {
                "type": "object",
                "properties": {
                    "currency": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number",
                        "format": "float"
                    },
                    "maxPrice": {
                        "type": "number",
                        "format": "float"
                    }
                },
                "required": ["currency", "price", "maxPrice"]
            },
            "CalendarDto": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date"
                    },
                    "minPrices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CalendarPriceDto"
                        }
                    },
                    "rideCount": {
                        "type": "number"
                    }
                },
                "required": ["date", "minPrices", "rideCount"]
            },
            "SearchResultDto": {
                "type": "object",
                "properties": {
                    "rides": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SearchDto"
                        }
                    },
                    "calendar": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CalendarDto"
                        }
                    },
                    "dateActual": {
                        "type": "object"
                    }
                },
                "required": ["rides", "calendar"]
            },
            "SuggestResultDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "latitude": {
                        "type": "number"
                    },
                    "longitude": {
                        "type": "number"
                    }
                },
                "required": [
                    "id",
                    "description",
                    "country",
                    "name",
                    "latitude",
                    "longitude"
                ]
            },
            "AtlasPartnerContactsDto": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "unp": {
                        "type": "string"
                    },
                    "by": {
                        "type": "string"
                    },
                    "when": {
                        "type": "string"
                    },
                    "working": {
                        "type": "string",
                        "description": "Часы работы",
                        "example": "8:00 — 17:00"
                    }
                },
                "required": ["address", "name", "unp", "by", "when", "working"]
            },
            "SearchHistoryDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number"
                    },
                    "from": {
                        "type": "string"
                    },
                    "to": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string"
                    }
                },
                "required": ["id", "from", "to", "date"]
            },
            "AtlasUserRoleDto": {
                "type": "object",
                "properties": {
                    "employee": {
                        "type": "boolean"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "driver_mini",
                            "tech_admin",
                            "admin",
                            "driver",
                            "operator",
                            "global_operator"
                        ]
                    }
                },
                "required": ["employee", "role"]
            },
            "UserDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number"
                    },
                    "saasPartner": {
                        "type": "string"
                    },
                    "phoneNumber": {
                        "type": "number"
                    },
                    "email": {
                        "type": "string"
                    },
                    "emailVerified": {
                        "type": "boolean"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "avatar": {
                        "type": "string"
                    },
                    "birthday": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "policyVersion": {
                        "type": "string"
                    },
                    "role": {
                        "$ref": "#/components/schemas/AtlasUserRoleDto"
                    },
                    "roles": {
                        "type": "array",
                        "nullable": true,
                        "description": "Роли SaaS юзера",
                        "items": {
                            "type": "string",
                            "enum": ["admin", "partner"]
                        }
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "isPartner": {
                        "type": "boolean"
                    },
                    "isAdmin": {
                        "type": "boolean"
                    },
                    "ordersCount": {
                        "type": "number"
                    },
                    "lastPickupDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "hashedPhone": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "saasPartner",
                    "emailVerified",
                    "createdAt",
                    "isPartner",
                    "isAdmin",
                    "ordersCount",
                    "lastPickupDate",
                    "hashedPhone"
                ]
            },
            "RemoveUserDto": {
                "type": "object",
                "properties": {
                    "readonly": {
                        "type": "object"
                    }
                },
                "required": ["readonly"]
            },
            "PersonalDataDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number"
                    },
                    "name": {
                        "type": "string"
                    },
                    "surname": {
                        "type": "string"
                    },
                    "patronymic": {
                        "type": "string",
                        "default": "unknown"
                    },
                    "gender": {
                        "type": "string",
                        "default": "unknown"
                    },
                    "docType": {
                        "type": "string",
                        "default": "unknown"
                    },
                    "docNum": {
                        "type": "string",
                        "default": "unknown"
                    },
                    "citizen": {
                        "type": "string",
                        "default": "unknown"
                    },
                    "birthday": {
                        "type": "string",
                        "default": "unknown"
                    }
                },
                "required": ["id", "name", "surname"]
            },
            "CardDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number"
                    },
                    "invoiceAccessToken": {
                        "type": "string"
                    },
                    "cardMask": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "invoiceId": {
                        "type": "string"
                    },
                    "paymentID": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "number"
                    },
                    "acquiring": {
                        "type": "string",
                        "enum": ["RBK", "YooKassa", "Tinkoff"]
                    },
                    "currency": {
                        "type": "string",
                        "enum": ["RUB", "BYN", "UAH"]
                    },
                    "expires": {
                        "type": "string",
                        "description": "Срок окончания действия карты. В формате MMYY, где YY — две последние цифры года"
                    }
                },
                "required": [
                    "id",
                    "invoiceAccessToken",
                    "cardMask",
                    "email",
                    "invoiceId",
                    "paymentID",
                    "userId",
                    "acquiring",
                    "currency",
                    "expires"
                ]
            },
            "UserNameDto": {
                "type": "object",
                "properties": {}
            },
            "UpdateUserRequestDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "example": "Иван Петров",
                        "$ref": "#/components/schemas/UserNameDto"
                    },
                    "birthday": {
                        "type": "string",
                        "format": "date",
                        "example": "1990-01-02"
                    }
                }
            },
            "UpdateUserPolicyDto": {
                "type": "object",
                "properties": {
                    "policyVersion": {
                        "type": "string",
                        "example": "1234"
                    }
                }
            },
            "UserReferralPromocodeDto": {
                "type": "object",
                "properties": {
                    "available": {
                        "type": "boolean"
                    },
                    "code": {
                        "type": "string",
                        "example": "JKEICO"
                    }
                },
                "required": ["available"]
            },
            "SaaSCarrier": {
                "type": "object",
                "properties": {}
            },
            "SaaSPolicy": {
                "type": "object",
                "properties": {}
            },
            "SaasSecurityDto": {
                "type": "object",
                "properties": {
                    "disableUsersWithoutOrders": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Запретить бронирование пользователем у которых не было ни одного заказа"
                    },
                    "disableNewUsers": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Запретить бронирование новым пользователям"
                    },
                    "newUsersCutoffHours": {
                        "type": "number",
                        "nullable": true,
                        "description": "В течении скольких часов после регистрации пользователь считается новым"
                    }
                },
                "required": [
                    "disableUsersWithoutOrders",
                    "disableNewUsers",
                    "newUsersCutoffHours"
                ]
            },
            "SaasRouteDirectionsMetaDto": {
                "type": "object",
                "properties": {
                    "carrierId": {
                        "type": "string",
                        "nullable": true,
                        "description": "Идентификатор службы"
                    },
                    "departureCity": {
                        "nullable": true,
                        "description": "Идентификатор города направления",
                        "$ref": "#/components/schemas/SuggestResultDto"
                    },
                    "arrivalCity": {
                        "nullable": true,
                        "description": "Идентификатор города направления",
                        "$ref": "#/components/schemas/SuggestResultDto"
                    },
                    "callCenterPhoneNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "Номер колл-центра"
                    }
                }
            },
            "SaaSConfigMetaDto": {
                "type": "object",
                "properties": {
                    "domains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "logoURL": {
                        "type": "string"
                    },
                    "partnerID": {
                        "type": "string"
                    },
                    "billingID": {
                        "type": "number"
                    },
                    "universalSuggest": {
                        "type": "boolean",
                        "description": "Если `true`, поиск городов будет осуществляться по полному списку городов, без фильтрации по сегментам Atlas'а или RouteBy. Полезно для Карпула."
                    },
                    "logoDarkURL": {
                        "type": "string"
                    },
                    "backgroundURL": {
                        "type": "string"
                    },
                    "yandexMetrikaId": {
                        "type": "number"
                    },
                    "carriers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SaaSCarrier"
                        }
                    },
                    "policies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SaaSPolicy"
                        }
                    },
                    "security": {
                        "nullable": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SaasSecurityDto"
                        }
                    },
                    "milesDisabled": {
                        "type": "boolean",
                        "description": "Отключить способ оплаты \"милями\""
                    },
                    "ratingDisabled": {
                        "type": "boolean",
                        "description": "Отключить рейтинг для партнера"
                    },
                    "surgeDisabled": {
                        "type": "boolean",
                        "description": "Отключить сурдж"
                    },
                    "surgeColor": {
                        "type": "string",
                        "description": "Цвет сурджа"
                    },
                    "pwaIcon512x512Png": {
                        "type": "string",
                        "description": "PWA иконка 512x512 PNG"
                    },
                    "pwaIcon192x192Png": {
                        "type": "string",
                        "description": "PWA иконка 192x192 PNG"
                    },
                    "pwaDesktopEnabled": {
                        "type": "boolean",
                        "description": "Включить PWA в браузерной десктоп версии"
                    },
                    "pwaMobileEnabled": {
                        "type": "boolean",
                        "description": "Включить PWA в браузерной мобильной версии"
                    },
                    "d2dAppBannerEnabled": {
                        "type": "boolean",
                        "description": "Включить D2D баннер с предложением установить приложение на странице бронирования"
                    },
                    "d2dShuttleBannerEnabled": {
                        "type": "boolean",
                        "description": "Включить D2D баннер с описанием Шатла в серпе (только тачи)"
                    },
                    "downloadAppBlockEnabled": {
                        "type": "boolean",
                        "description": "Включить блок \"Скачать приложение\" на главной"
                    },
                    "nativeAppTopperEnabled": {
                        "type": "boolean",
                        "description": "Включить топпер \"Скачать приложение\" в серпе"
                    },
                    "onlinePaymentBadgeEnabledRU": {
                        "type": "boolean",
                        "description": "Включить бейдж \"Можно картой\" в серпе (только рейсы в валютой RUB)"
                    },
                    "onlinePaymentBadgeEnabledBY": {
                        "type": "boolean",
                        "description": "Включить бейдж \"Можно картой\" в серпе (только рейсы в валютой BYN)"
                    },
                    "onlinePaymentBadgeMaxPercentage": {
                        "type": "number",
                        "nullable": true,
                        "description": "Отобразить бейдж \"Можно картой\" если процент рейсов поддерживающих онлайн оплату меньше xx%"
                    },
                    "callCenterPhoneNumberRU": {
                        "type": "string",
                        "nullable": true,
                        "description": "Номер колл-центра в РФ"
                    },
                    "userReferralEnabled": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Включить блок с рефералкой"
                    },
                    "routeDirectionsMeta": {
                        "nullable": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SaasRouteDirectionsMetaDto"
                        }
                    }
                },
                "required": [
                    "domains",
                    "logoURL",
                    "partnerID",
                    "billingID",
                    "logoDarkURL",
                    "backgroundURL",
                    "yandexMetrikaId",
                    "carriers",
                    "policies",
                    "security",
                    "routeDirectionsMeta"
                ]
            },
            "SaasLegalDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "foundationYear": {
                        "type": "number"
                    },
                    "address": {
                        "type": "string"
                    },
                    "tin": {
                        "type": "string"
                    }
                }
            },
            "SaasBlacklistDto": {
                "type": "object",
                "properties": {
                    "carrierId": {
                        "type": "string"
                    },
                    "partnerId": {
                        "type": "string"
                    },
                    "legs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/"
                        }
                    },
                    "connector": {
                        "type": "string"
                    }
                }
            },
            "SaasRoutePhoneDto": {
                "type": "object",
                "properties": {
                    "from": {
                        "type": "string"
                    },
                    "to": {
                        "type": "string"
                    },
                    "phones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": ["from", "to", "phones"]
            },
            "SaasPhonesDto": {
                "type": "object",
                "properties": {
                    "defaultPhones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "routePhones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SaasRoutePhoneDto"
                        }
                    }
                }
            },
            "SaaSConfigCordovaDto": {
                "type": "object",
                "properties": {
                    "appName": {
                        "type": "string"
                    },
                    "appDescription": {
                        "type": "string"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "iosAppId": {
                        "type": "string"
                    },
                    "appRateIosId": {
                        "type": "string"
                    },
                    "appRateAndroidUrl": {
                        "type": "string"
                    },
                    "androidAppId": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "splashscreen": {
                        "type": "string"
                    },
                    "ionicDeeplinksURLScheme": {
                        "type": "string"
                    },
                    "ionicDeeplinksDeeplinkHost": {
                        "type": "string"
                    },
                    "oneSignalAppId": {
                        "type": "string"
                    },
                    "oneSignalApiKey": {
                        "type": "string"
                    },
                    "allAppRecommendedVersion": {
                        "type": "string"
                    },
                    "allAppForcedVersion": {
                        "type": "string"
                    },
                    "iosAppRecommendedVersion": {
                        "type": "string"
                    },
                    "iosAppForcedVersion": {
                        "type": "string"
                    },
                    "androidAppRecommendedVersion": {
                        "type": "string"
                    },
                    "androidAppForcedVersion": {
                        "type": "string"
                    }
                }
            },
            "Price": {
                "type": "object",
                "properties": {
                    "currency": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number"
                    },
                    "maxPrice": {
                        "type": "number"
                    }
                },
                "required": ["currency", "price", "maxPrice"]
            },
            "SaasPromoDto": {
                "type": "object",
                "properties": {
                    "fromName": {
                        "type": "string"
                    },
                    "toName": {
                        "type": "string"
                    },
                    "minPrice": {
                        "$ref": "#/components/schemas/Price"
                    },
                    "phones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "target": {
                        "type": "string"
                    }
                },
                "required": [
                    "fromName",
                    "toName",
                    "minPrice",
                    "phones",
                    "target"
                ]
            },
            "SaasSmsConfigDto": {
                "type": "object",
                "properties": {}
            },
            "SaaSConfigDto": {
                "type": "object",
                "properties": {
                    "partner": {
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/SaaSConfigMetaDto"
                    },
                    "i18n": {
                        "type": "object"
                    },
                    "legal": {
                        "$ref": "#/components/schemas/SaasLegalDto"
                    },
                    "theme": {
                        "type": "object"
                    },
                    "blacklist": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SaasBlacklistDto"
                        }
                    },
                    "phones": {
                        "$ref": "#/components/schemas/SaasPhonesDto"
                    },
                    "cordova": {
                        "$ref": "#/components/schemas/SaaSConfigCordovaDto"
                    },
                    "promo": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SaasPromoDto"
                        }
                    },
                    "sms": {
                        "$ref": "#/components/schemas/SaasSmsConfigDto"
                    }
                },
                "required": [
                    "partner",
                    "meta",
                    "i18n",
                    "legal",
                    "theme",
                    "phones",
                    "promo"
                ]
            },
            "SaaSAppVersionDto": {
                "type": "object",
                "properties": {
                    "partner": {
                        "type": "string"
                    },
                    "platform": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": ["partner", "platform", "type"]
            },
            "SaaSConfigVersionsDto": {
                "type": "object",
                "properties": {
                    "version": {
                        "type": "string"
                    }
                }
            },
            "SaaSPolicyDto": {
                "type": "object",
                "properties": {
                    "partner": {
                        "type": "string"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": ["partner", "countryCode"]
            },
            "PassengersRequestDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number"
                    },
                    "birthDate": {
                        "type": "string"
                    },
                    "citizenshipCode": {
                        "type": "string"
                    },
                    "dischargeStopId": {
                        "type": "string"
                    },
                    "docNumber": {
                        "type": "string"
                    },
                    "docSeries": {
                        "type": "string"
                    },
                    "docTypeCode": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "genderTypeCode": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "middleName": {
                        "type": "string"
                    },
                    "pickupStopId": {
                        "type": "string"
                    },
                    "ticketTypeCode": {
                        "type": "string"
                    },
                    "subject": {
                        "type": "string"
                    },
                    "seatCode": {
                        "type": "number"
                    }
                },
                "required": [
                    "dischargeStopId",
                    "firstName",
                    "lastName",
                    "pickupStopId",
                    "ticketTypeCode"
                ]
            },
            "BookTicketDto": {
                "type": "object",
                "properties": {
                    "passengers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PassengersRequestDto"
                        }
                    },
                    "seatCodes": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    },
                    "rideId": {
                        "type": "string"
                    },
                    "savePersonalData": {
                        "type": "boolean",
                        "default": true
                    }
                },
                "required": ["rideId", "savePersonalData"]
            },
            "BookTicketResponseDto": {
                "type": "object",
                "properties": {
                    "orderId": {
                        "type": "string"
                    }
                },
                "required": ["orderId"]
            },
            "PassengerDto": {
                "type": "object",
                "properties": {
                    "birthDate": {
                        "type": "string"
                    },
                    "citizenship": {
                        "type": "string"
                    },
                    "docNumber": {
                        "type": "string"
                    },
                    "docType": {
                        "type": "string",
                        "enum": [
                            "birth_certificate_ru",
                            "military_book_ru",
                            "permit_of_residence_ru",
                            "foreign_passport",
                            "passport_by",
                            "passport_ru",
                            "passport_su",
                            "soldier_id_ru",
                            "id_ua",
                            "id_ru",
                            "passport_pl",
                            "birth_certificate",
                            "permit_of_residence"
                        ]
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "genderType": {
                        "type": "string",
                        "enum": ["male", "female"]
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "middleName": {
                        "type": "string"
                    },
                    "seat": {
                        "type": "number"
                    },
                    "ticketType": {
                        "type": "string"
                    },
                    "subject": {
                        "type": "string"
                    }
                },
                "required": ["firstName", "lastName", "ticketType"]
            },
            "MilesAccrualDto": {
                "type": "object",
                "properties": {
                    "cash": {
                        "type": "number"
                    },
                    "card": {
                        "type": "number"
                    }
                },
                "required": ["cash", "card"]
            },
            "TicketDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "passenger": {
                        "$ref": "#/components/schemas/PassengerDto"
                    },
                    "price": {
                        "type": "number"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "waiting_confirmation",
                            "confirmed",
                            "unknown",
                            "booked",
                            "error",
                            "active",
                            "landing",
                            "cancelled",
                            "expired"
                        ]
                    },
                    "onlinePrice": {
                        "type": "number"
                    },
                    "url": {
                        "type": "string"
                    },
                    "paid": {
                        "type": "number"
                    },
                    "refunded": {
                        "type": "number"
                    },
                    "cancelledAt": {
                        "type": "string"
                    },
                    "discount": {
                        "type": "number",
                        "default": 0
                    },
                    "fee": {
                        "type": "number"
                    },
                    "milesAccrual": {
                        "$ref": "#/components/schemas/MilesAccrualDto"
                    }
                },
                "required": [
                    "id",
                    "passenger",
                    "price",
                    "status",
                    "onlinePrice",
                    "discount",
                    "fee",
                    "milesAccrual"
                ]
            },
            "SanctionDto": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "required": ["key", "label", "description"]
            },
            "LoyaltyPriceInfoDto": {
                "type": "object",
                "properties": {
                    "cash": {
                        "type": "number"
                    },
                    "card": {
                        "type": "number"
                    }
                },
                "required": ["cash", "card"]
            },
            "LoyaltyDiscountsDto": {
                "type": "object",
                "properties": {
                    "promocode": {
                        "description": "Скидка по промокоду",
                        "$ref": "#/components/schemas/LoyaltyPriceInfoDto"
                    }
                },
                "required": ["promocode"]
            },
            "LoyaltyMilesDto": {
                "type": "object",
                "properties": {
                    "price": {
                        "type": "number",
                        "description": "Стоимость билета в милях"
                    },
                    "toCollect": {
                        "description": "Сколько миль будет начислено в зависимости от способа оплаты",
                        "$ref": "#/components/schemas/LoyaltyPriceInfoDto"
                    }
                },
                "required": ["price", "toCollect"]
            },
            "TicketLoyaltyInfoDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "discounts": {
                        "description": "Скидки примененные к билету",
                        "$ref": "#/components/schemas/LoyaltyDiscountsDto"
                    },
                    "miles": {
                        "$ref": "#/components/schemas/LoyaltyMilesDto"
                    },
                    "basePrice": {
                        "$ref": "#/components/schemas/LoyaltyPriceInfoDto"
                    }
                },
                "required": ["id", "discounts", "miles", "basePrice"]
            },
            "PromocodeErrorDto": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "number"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "required": ["code", "description"]
            },
            "PromocodeLoyaltyInfoDto": {
                "type": "object",
                "properties": {
                    "applied": {
                        "type": "boolean",
                        "description": "Применен ли промокод"
                    },
                    "error": {
                        "default": null,
                        "$ref": "#/components/schemas/PromocodeErrorDto"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": ["applied", "error", "value"]
            },
            "CalculateLoyaltyResponseDto": {
                "type": "object",
                "properties": {
                    "tickets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TicketLoyaltyInfoDto"
                        }
                    },
                    "promocode": {
                        "description": "Статус примененного промокода",
                        "$ref": "#/components/schemas/PromocodeLoyaltyInfoDto"
                    },
                    "price": {
                        "type": "number"
                    },
                    "onlinePrice": {
                        "type": "number"
                    },
                    "milesPrice": {
                        "type": "number"
                    },
                    "bonus": {
                        "type": "number"
                    },
                    "onlineBonus": {
                        "type": "number"
                    }
                },
                "required": [
                    "tickets",
                    "promocode",
                    "price",
                    "onlinePrice",
                    "milesPrice",
                    "bonus",
                    "onlineBonus"
                ]
            },
            "ForbiddenPaymentType": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "card",
                            "miles",
                            "cash",
                            "reccur",
                            "atlas_promocode"
                        ]
                    },
                    "reason": {
                        "type": "string",
                        "enum": ["karma"]
                    }
                },
                "required": ["type", "reason"]
            },
            "BookingUnavailableBlacklistReasonDto": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "Пользователь в черном списке",
                        "enum": ["in_black_list"]
                    }
                },
                "required": ["code"]
            },
            "BookingUnavailableNearRoutesReasonDto": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "Уже есть билет на этот маршрут",
                        "enum": ["forbidden_near_routes"]
                    },
                    "value": {
                        "type": "string",
                        "description": "Дата и время ближайшего заказа"
                    }
                },
                "required": ["code", "value"]
            },
            "BookingUnavailableTicketsPerRouteReasonDto": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "Сработало ограничение на количество бронирований на этот маршрут",
                        "enum": ["tickets_per_route_count"]
                    },
                    "value": {
                        "type": "number",
                        "description": "Количество бронирований сделано"
                    },
                    "limit": {
                        "type": "number",
                        "description": "Лимит"
                    }
                },
                "required": ["code", "value", "limit"]
            },
            "BookingUnavailableNewUserReasonDto": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "Пользователь недавно зарегистрировался, нужно подождать",
                        "enum": ["new_user"]
                    }
                },
                "required": ["code"]
            },
            "BookingAvailabilityDto": {
                "type": "object",
                "properties": {
                    "available": {
                        "type": "boolean",
                        "description": "Доступно ли бронирование на рейс"
                    },
                    "reason": {
                        "description": "Причина, по которой бронирование недоступно",
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/BookingUnavailableBlacklistReasonDto"
                            },
                            {
                                "$ref": "#/components/schemas/BookingUnavailableNearRoutesReasonDto"
                            },
                            {
                                "$ref": "#/components/schemas/BookingUnavailableTicketsPerRouteReasonDto"
                            },
                            {
                                "$ref": "#/components/schemas/BookingUnavailableNewUserReasonDto"
                            }
                        ]
                    }
                },
                "required": ["available", "reason"]
            },
            "RideDto": {
                "type": "object",
                "properties": {
                    "pickupStops": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StopsDto"
                        }
                    },
                    "dischargeStops": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StopsDto"
                        }
                    },
                    "saasId": {
                        "type": "string"
                    },
                    "legal": {
                        "$ref": "#/components/schemas/LegalSchemaDto"
                    },
                    "animals": {
                        "$ref": "#/components/schemas/SearchSchemaAnimalsDto"
                    },
                    "luggage": {
                        "$ref": "#/components/schemas/SearchSchemaLuggageDto"
                    },
                    "partner": {
                        "type": "string"
                    },
                    "partnerName": {
                        "type": "string"
                    },
                    "carrier_phones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "paymentTypes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "card",
                                "miles",
                                "cash",
                                "reccur",
                                "atlas_promocode"
                            ]
                        }
                    },
                    "refundConditions": {
                        "type": "string",
                        "default": "Комиссия за возврат составляет: 5% в случае возврата более чем за 2 часа до отправления 15% в течение 2 часов до отправления 25% в течение 3 часов после отправления Возврат на сайте возможен не позднее чем за 15 минут до отправления рейса, в остальное время возврат можно сделать на автовокзале. В случае отмены рейса возврат комиссией не облагается."
                    },
                    "fee": {
                        "type": "number",
                        "format": "float"
                    },
                    "id": {
                        "type": "string"
                    },
                    "carrier": {
                        "type": "string"
                    },
                    "carrierID": {
                        "type": "string"
                    },
                    "onlinePrice": {
                        "type": "number"
                    },
                    "bus": {
                        "$ref": "#/components/schemas/BusDto"
                    },
                    "from": {
                        "$ref": "#/components/schemas/DestinationDto"
                    },
                    "valid_before": {
                        "type": "number"
                    },
                    "to": {
                        "$ref": "#/components/schemas/DestinationDto"
                    },
                    "departure": {
                        "type": "string"
                    },
                    "arrival": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string",
                        "default": "RUB"
                    },
                    "price": {
                        "type": "number"
                    },
                    "freeSeats": {
                        "type": "number",
                        "format": "int32"
                    },
                    "ticketLimit": {
                        "type": "number"
                    },
                    "onlineRefund": {
                        "type": "boolean",
                        "default": true
                    },
                    "bookFields": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "phone",
                                "birthDate",
                                "surname",
                                "document",
                                "email",
                                "gender",
                                "name",
                                "patronymic",
                                "citizenship"
                            ]
                        }
                    },
                    "benefits": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "charger",
                                "express",
                                "tv",
                                "press",
                                "child-seat",
                                "air",
                                "220v",
                                "armch",
                                "wifi",
                                "coffee",
                                "no-ticket-required",
                                "desinfection",
                                "big-bus",
                                "meteor"
                            ]
                        }
                    },
                    "rideType": {
                        "type": "string",
                        "enum": ["shuttle", "charter", "regular"]
                    },
                    "connector": {
                        "type": "string"
                    },
                    "atlasMeta": {
                        "$ref": "#/components/schemas/SearchAtlasMetaDto"
                    },
                    "freighter": {
                        "$ref": "#/components/schemas/FreighterDto"
                    },
                    "saleTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "flightPopular": {
                        "type": "number",
                        "enum": [-1, 0, 1]
                    },
                    "dynamicMode": {
                        "type": "boolean"
                    },
                    "dynamicConfig": {
                        "$ref": "#/components/schemas/DynamicConfigDto"
                    },
                    "driver": {
                        "$ref": "#/components/schemas/DriverDto"
                    },
                    "seatingScheme": {
                        "default": [],
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SeatingSchemeDto"
                        }
                    },
                    "seatingRequired": {
                        "type": "boolean",
                        "default": false
                    },
                    "frame": {
                        "default": {
                            "use": false
                        },
                        "$ref": "#/components/schemas/FrameSettingsDto"
                    },
                    "forbiddenPaymentTypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ForbiddenPaymentType"
                        }
                    },
                    "bookingAvailable": {
                        "$ref": "#/components/schemas/BookingAvailabilityDto"
                    }
                },
                "required": [
                    "saasId",
                    "partnerName",
                    "paymentTypes",
                    "id",
                    "carrier",
                    "from",
                    "valid_before",
                    "to",
                    "departure",
                    "currency",
                    "price",
                    "freeSeats",
                    "bookFields",
                    "rideType",
                    "connector",
                    "saleTypes",
                    "dynamicMode",
                    "dynamicConfig",
                    "forbiddenPaymentTypes",
                    "bookingAvailable"
                ]
            },
            "OrderCheckDto": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": ["payment", "refund"],
                        "description": "статус чека"
                    },
                    "link": {
                        "type": "string",
                        "description": "ссылка на чек"
                    }
                },
                "required": ["type", "link"]
            },
            "OrderDto": {
                "type": "object",
                "properties": {
                    "partnerName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number",
                        "format": "float"
                    },
                    "tickets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TicketDto"
                        }
                    },
                    "sanctions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SanctionDto"
                        }
                    },
                    "expirationDateTime": {
                        "type": "string"
                    },
                    "onlinePrice": {
                        "type": "number"
                    },
                    "pickupStop": {
                        "$ref": "#/components/schemas/StopsDto"
                    },
                    "dischargeStop": {
                        "$ref": "#/components/schemas/StopsDto"
                    },
                    "loyaltyInfo": {
                        "$ref": "#/components/schemas/CalculateLoyaltyResponseDto"
                    },
                    "expiresIn": {
                        "type": "number"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "waiting_confirmation",
                            "confirmed",
                            "unknown",
                            "booked",
                            "error",
                            "active",
                            "landing",
                            "cancelled",
                            "expired"
                        ]
                    },
                    "paymentMethod": {
                        "type": "string",
                        "enum": [
                            "card",
                            "miles",
                            "cash",
                            "reccur",
                            "atlas_promocode"
                        ],
                        "nullable": true,
                        "default": null
                    },
                    "rideInfo": {
                        "$ref": "#/components/schemas/RideDto"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "cancelledAt": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "checks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderCheckDto"
                        }
                    }
                },
                "required": [
                    "id",
                    "price",
                    "onlinePrice",
                    "pickupStop",
                    "dischargeStop",
                    "status",
                    "paymentMethod",
                    "createdAt"
                ]
            },
            "ConfirmUrlDto": {
                "type": "object",
                "properties": {
                    "confirm": {
                        "type": "string"
                    },
                    "confirmAndSave": {
                        "type": "string"
                    }
                },
                "required": ["confirm"]
            },
            "InvoiceDto": {
                "type": "object",
                "properties": {
                    "invoiceId": {
                        "type": "string"
                    },
                    "invoiceAccessToken": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "confirmationUrl": {
                        "$ref": "#/components/schemas/ConfirmUrlDto"
                    },
                    "acquiring": {
                        "type": "string",
                        "enum": ["RBK", "YooKassa", "Tinkoff"]
                    },
                    "checks": {
                        "default": [],
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderCheckDto"
                        }
                    }
                },
                "required": [
                    "invoiceId",
                    "invoiceAccessToken",
                    "title",
                    "confirmationUrl",
                    "acquiring"
                ]
            },
            "RecurrentPaymentDto": {
                "type": "object",
                "properties": {
                    "orderId": {
                        "type": "string"
                    },
                    "cardId": {
                        "type": "string"
                    }
                },
                "required": ["orderId", "cardId"]
            },
            "DefaultResponseDto": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    }
                },
                "required": ["success"]
            },
            "OrdersResponseDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "rideInfo": {
                        "$ref": "#/components/schemas/RideDto"
                    },
                    "pickupStop": {
                        "$ref": "#/components/schemas/StopsDto"
                    },
                    "dischargeStop": {
                        "$ref": "#/components/schemas/StopsDto"
                    },
                    "loyaltyInfo": {
                        "$ref": "#/components/schemas/CalculateLoyaltyResponseDto"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "waiting_confirmation",
                            "confirmed",
                            "unknown",
                            "booked",
                            "error",
                            "active",
                            "landing",
                            "cancelled",
                            "expired"
                        ]
                    },
                    "expirationDateTime": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number"
                    },
                    "paymentMethod": {
                        "type": "string",
                        "enum": [
                            "card",
                            "miles",
                            "cash",
                            "reccur",
                            "atlas_promocode"
                        ],
                        "default": null
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "passengersCount": {
                        "type": "number"
                    },
                    "tickets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TicketDto"
                        }
                    },
                    "cancelledAt": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "rideInfo",
                    "pickupStop",
                    "dischargeStop",
                    "status",
                    "expirationDateTime",
                    "price",
                    "createdAt",
                    "passengersCount",
                    "tickets"
                ]
            },
            "OrderConfirmDto": {
                "type": "object",
                "properties": {
                    "paymentType": {
                        "type": "string",
                        "enum": ["cash", "miles"]
                    }
                },
                "required": ["paymentType"]
            },
            "UpcomingTripResponseDto": {
                "type": "object",
                "properties": {
                    "rideInfo": {
                        "$ref": "#/components/schemas/SearchDto"
                    }
                },
                "required": ["rideInfo"]
            },
            "CreateReviewBodyDto": {
                "type": "object",
                "properties": {
                    "orderId": {
                        "type": "string"
                    },
                    "rate": {
                        "type": "number"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "dislikes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": ["orderId", "rate"]
            },
            "ReviewDislikeDto": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    }
                },
                "required": ["code", "title"]
            },
            "ReviewSettingsDto": {
                "type": "object",
                "properties": {
                    "dislikes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReviewDislikeDto"
                        }
                    }
                },
                "required": ["dislikes"]
            },
            "ListReviewResponseDto": {
                "type": "object",
                "properties": {
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderDto"
                        }
                    },
                    "reviewSettings": {
                        "$ref": "#/components/schemas/ReviewSettingsDto"
                    }
                },
                "required": ["orders", "reviewSettings"]
            },
            "ReviewDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number"
                    },
                    "reporterUserId": {
                        "type": "number"
                    },
                    "orderId": {
                        "type": "string"
                    },
                    "rate": {
                        "type": "number"
                    },
                    "meta": {
                        "type": "object"
                    },
                    "connector": {
                        "type": "string"
                    },
                    "partnerId": {
                        "type": "string"
                    },
                    "supplierCarrierId": {
                        "type": "string"
                    },
                    "supplierDriverId": {
                        "type": "string"
                    },
                    "supplierCarId": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "reporterUserId",
                    "orderId",
                    "meta",
                    "connector",
                    "partnerId",
                    "supplierCarrierId"
                ]
            },
            "RefundItemDto": {
                "type": "object",
                "properties": {
                    "paymentType": {
                        "type": "string",
                        "enum": ["cash", "card"]
                    },
                    "price": {
                        "type": "number"
                    }
                },
                "required": ["price"]
            },
            "RefundAmountDto": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RefundItemDto"
                        }
                    },
                    "available": {
                        "type": "boolean"
                    }
                },
                "required": ["available"]
            },
            "TicketTypeDto": {
                "type": "object",
                "properties": {
                    "price": {
                        "type": "number"
                    },
                    "code": {
                        "type": "string"
                    },
                    "onlinePrice": {
                        "type": "number"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "child",
                            "baggage",
                            "full",
                            "discount",
                            "custom"
                        ]
                    },
                    "name": {
                        "type": "string"
                    },
                    "milesAccrual": {
                        "type": "object"
                    }
                },
                "required": ["price", "code", "onlinePrice", "type"]
            },
            "GenderTypesDto": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": ["male", "female"],
                        "default": null
                    },
                    "code": {
                        "type": "string",
                        "format": "int32"
                    }
                },
                "required": ["type", "code"]
            },
            "DocTypesDto": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "birth_certificate_ru",
                            "military_book_ru",
                            "permit_of_residence_ru",
                            "foreign_passport",
                            "passport_by",
                            "passport_ru",
                            "passport_su",
                            "soldier_id_ru",
                            "id_ua",
                            "id_ru",
                            "passport_pl",
                            "birth_certificate",
                            "permit_of_residence"
                        ]
                    },
                    "partners": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": ["code", "type", "partners"]
            },
            "BookParamsSchemaSeatsDto": {
                "type": "object",
                "properties": {
                    "number": {
                        "type": "number"
                    },
                    "code": {
                        "type": "string"
                    }
                },
                "required": ["number", "code"]
            },
            "BookParamsDto": {
                "type": "object",
                "properties": {
                    "genderTypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GenderTypesDto"
                        }
                    },
                    "ticketTypes": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/TicketTypeDto"
                            }
                        }
                    },
                    "docTypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DocTypesDto"
                        }
                    },
                    "seats": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BookParamsSchemaSeatsDto"
                        }
                    }
                },
                "required": ["genderTypes", "ticketTypes", "docTypes", "seats"]
            },
            "RideInfoDto": {
                "type": "object",
                "properties": {
                    "pickupStops": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StopsDto"
                        }
                    },
                    "dischargeStops": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StopsDto"
                        }
                    },
                    "saasId": {
                        "type": "string"
                    },
                    "legal": {
                        "$ref": "#/components/schemas/LegalSchemaDto"
                    },
                    "animals": {
                        "$ref": "#/components/schemas/SearchSchemaAnimalsDto"
                    },
                    "luggage": {
                        "$ref": "#/components/schemas/SearchSchemaLuggageDto"
                    },
                    "partner": {
                        "type": "string"
                    },
                    "partnerName": {
                        "type": "string"
                    },
                    "carrier_phones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "paymentTypes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "card",
                                "miles",
                                "cash",
                                "reccur",
                                "atlas_promocode"
                            ]
                        }
                    },
                    "refundConditions": {
                        "type": "string",
                        "default": "Комиссия за возврат составляет: 5% в случае возврата более чем за 2 часа до отправления 15% в течение 2 часов до отправления 25% в течение 3 часов после отправления Возврат на сайте возможен не позднее чем за 15 минут до отправления рейса, в остальное время возврат можно сделать на автовокзале. В случае отмены рейса возврат комиссией не облагается."
                    },
                    "fee": {
                        "type": "number",
                        "format": "float"
                    },
                    "id": {
                        "type": "string"
                    },
                    "carrier": {
                        "type": "string"
                    },
                    "carrierID": {
                        "type": "string"
                    },
                    "onlinePrice": {
                        "type": "number"
                    },
                    "bus": {
                        "$ref": "#/components/schemas/BusDto"
                    },
                    "from": {
                        "$ref": "#/components/schemas/DestinationDto"
                    },
                    "valid_before": {
                        "type": "number"
                    },
                    "to": {
                        "$ref": "#/components/schemas/DestinationDto"
                    },
                    "departure": {
                        "type": "string"
                    },
                    "arrival": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string",
                        "default": "RUB"
                    },
                    "price": {
                        "type": "number"
                    },
                    "freeSeats": {
                        "type": "number",
                        "format": "int32"
                    },
                    "ticketLimit": {
                        "type": "number"
                    },
                    "onlineRefund": {
                        "type": "boolean",
                        "default": true
                    },
                    "bookFields": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "phone",
                                "birthDate",
                                "surname",
                                "document",
                                "email",
                                "gender",
                                "name",
                                "patronymic",
                                "citizenship"
                            ]
                        }
                    },
                    "benefits": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "charger",
                                "express",
                                "tv",
                                "press",
                                "child-seat",
                                "air",
                                "220v",
                                "armch",
                                "wifi",
                                "coffee",
                                "no-ticket-required",
                                "desinfection",
                                "big-bus",
                                "meteor"
                            ]
                        }
                    },
                    "rideType": {
                        "type": "string",
                        "enum": ["shuttle", "charter", "regular"]
                    },
                    "connector": {
                        "type": "string"
                    },
                    "atlasMeta": {
                        "$ref": "#/components/schemas/SearchAtlasMetaDto"
                    },
                    "freighter": {
                        "$ref": "#/components/schemas/FreighterDto"
                    },
                    "saleTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "flightPopular": {
                        "type": "number",
                        "enum": [-1, 0, 1]
                    },
                    "dynamicMode": {
                        "type": "boolean"
                    },
                    "dynamicConfig": {
                        "$ref": "#/components/schemas/DynamicConfigDto"
                    },
                    "driver": {
                        "$ref": "#/components/schemas/DriverDto"
                    },
                    "seatingScheme": {
                        "default": [],
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SeatingSchemeDto"
                        }
                    },
                    "seatingRequired": {
                        "type": "boolean",
                        "default": false
                    },
                    "frame": {
                        "default": {
                            "use": false
                        },
                        "$ref": "#/components/schemas/FrameSettingsDto"
                    },
                    "forbiddenPaymentTypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ForbiddenPaymentType"
                        }
                    },
                    "bookingAvailable": {
                        "$ref": "#/components/schemas/BookingAvailabilityDto"
                    },
                    "genderTypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GenderTypesDto"
                        }
                    },
                    "ticketTypes": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/TicketTypeDto"
                            }
                        }
                    },
                    "docTypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DocTypesDto"
                        }
                    },
                    "seats": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BookParamsSchemaSeatsDto"
                        }
                    }
                },
                "required": [
                    "saasId",
                    "partnerName",
                    "paymentTypes",
                    "id",
                    "carrier",
                    "from",
                    "valid_before",
                    "to",
                    "departure",
                    "currency",
                    "price",
                    "freeSeats",
                    "bookFields",
                    "rideType",
                    "connector",
                    "saleTypes",
                    "dynamicMode",
                    "dynamicConfig",
                    "forbiddenPaymentTypes",
                    "bookingAvailable",
                    "genderTypes",
                    "ticketTypes",
                    "docTypes",
                    "seats"
                ]
            },
            "SeatingBookReqDto": {
                "type": "object",
                "properties": {
                    "trip": {
                        "type": "string"
                    },
                    "selected": {
                        "type": "number"
                    },
                    "unselected": {
                        "type": "number"
                    }
                },
                "required": ["trip"]
            },
            "SeatingBookResDto": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": ["success", "error"]
                    },
                    "scheme": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SeatingSchemeDto"
                        }
                    }
                },
                "required": ["status"]
            },
            "LocalizedName": {
                "type": "object",
                "properties": {
                    "en": {
                        "type": "string"
                    },
                    "ru": {
                        "type": "string"
                    },
                    "pl": {
                        "type": "string"
                    },
                    "be": {
                        "type": "string"
                    }
                },
                "required": ["en", "ru", "pl", "be"]
            },
            "CompleteCity": {
                "type": "object",
                "properties": {
                    "admin1_id": {
                        "type": "number"
                    },
                    "admin1_name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "number"
                    },
                    "latitude": {
                        "type": "number"
                    },
                    "longitude": {
                        "type": "number"
                    },
                    "name": {
                        "type": "string"
                    },
                    "population": {
                        "type": "number"
                    },
                    "timezone": {
                        "type": "string"
                    },
                    "admin1_localized_name": {
                        "$ref": "#/components/schemas/LocalizedName"
                    },
                    "localized_name": {
                        "$ref": "#/components/schemas/LocalizedName"
                    },
                    "alternate_names": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "admin1_id",
                    "admin1_name",
                    "id",
                    "latitude",
                    "longitude",
                    "name",
                    "population",
                    "timezone",
                    "admin1_localized_name",
                    "localized_name",
                    "alternate_names"
                ]
            },
            "StopOverLegDto": {
                "type": "object",
                "properties": {
                    "fromName": {
                        "type": "string"
                    },
                    "toName": {
                        "type": "string"
                    },
                    "minPrice": {
                        "type": "number"
                    },
                    "type": {
                        "type": "string",
                        "enum": ["atlas", "rzd", "bbc", "other"]
                    },
                    "link": {
                        "type": "string"
                    },
                    "directions": {
                        "type": "string"
                    },
                    "travelTime": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string",
                        "enum": ["RUB", "BYN", "UAH"]
                    }
                },
                "required": [
                    "fromName",
                    "toName",
                    "minPrice",
                    "type",
                    "travelTime",
                    "currency"
                ]
            },
            "StopOverDto": {
                "type": "object",
                "properties": {
                    "legs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StopOverLegDto"
                        }
                    }
                },
                "required": ["legs"]
            },
            "SeoDto": {
                "type": "object",
                "properties": {
                    "fromId": {
                        "type": "string"
                    },
                    "fromName": {
                        "type": "string"
                    },
                    "from": {
                        "$ref": "#/components/schemas/CompleteCity"
                    },
                    "toId": {
                        "type": "string"
                    },
                    "to": {
                        "$ref": "#/components/schemas/CompleteCity"
                    },
                    "toName": {
                        "type": "string"
                    },
                    "rideCount": {
                        "type": "number"
                    },
                    "locale": {
                        "type": "string"
                    },
                    "minPrices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Price"
                        }
                    },
                    "phones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "saasPartner": {
                        "type": "string"
                    },
                    "stopOver": {
                        "$ref": "#/components/schemas/StopOverDto"
                    }
                },
                "required": [
                    "fromId",
                    "fromName",
                    "from",
                    "toId",
                    "to",
                    "toName",
                    "rideCount",
                    "locale",
                    "minPrices",
                    "phones",
                    "saasPartner"
                ]
            },
            "SeoDtoResponse": {
                "type": "object",
                "properties": {
                    "fromId": {
                        "type": "string"
                    },
                    "fromName": {
                        "type": "string"
                    },
                    "from": {
                        "$ref": "#/components/schemas/CompleteCity"
                    },
                    "toId": {
                        "type": "string"
                    },
                    "to": {
                        "$ref": "#/components/schemas/CompleteCity"
                    },
                    "toName": {
                        "type": "string"
                    },
                    "rideCount": {
                        "type": "number"
                    },
                    "locale": {
                        "type": "string"
                    },
                    "minPrices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Price"
                        }
                    },
                    "phones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "saasPartner": {
                        "type": "string"
                    },
                    "stopOver": {
                        "$ref": "#/components/schemas/StopOverDto"
                    },
                    "fromFeatured": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SeoDto"
                        }
                    },
                    "toFeatured": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SeoDto"
                        }
                    }
                },
                "required": [
                    "fromId",
                    "fromName",
                    "from",
                    "toId",
                    "to",
                    "toName",
                    "rideCount",
                    "locale",
                    "minPrices",
                    "phones",
                    "saasPartner",
                    "fromFeatured",
                    "toFeatured"
                ]
            },
            "FeaturedResponseDto": {
                "type": "object",
                "properties": {
                    "nearbyRoutes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SeoDto"
                        }
                    },
                    "userRoutes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SeoDto"
                        }
                    }
                },
                "required": ["nearbyRoutes", "userRoutes"]
            },
            "SignupDto": {
                "type": "object",
                "properties": {
                    "captchaToken": {
                        "type": "string"
                    },
                    "phoneNumber": {
                        "type": "string"
                    },
                    "useFirebase": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "ts": {
                        "type": "string",
                        "nullable": true,
                        "description": "ISO строка с датой и временем инициализации запроса. Пр.: 2020-11-26T12:39:51+00:00При различии времени с временем верификации более 15 минут, верификация будет провалена"
                    },
                    "s": {
                        "type": "string",
                        "nullable": true,
                        "description": "MD5 подпись запроса. MD5 строка генерируется из строки:\"phoneNumber\", \"dateIso\", \"secretCode\", \"version\", склеенные через символ \":\""
                    }
                },
                "required": ["captchaToken", "phoneNumber", "useFirebase"]
            },
            "SignupResponseDto": {
                "type": "object",
                "properties": {
                    "nextMessage": {
                        "type": "number",
                        "default": 30
                    },
                    "codeLength": {
                        "type": "number",
                        "nullable": false
                    }
                },
                "required": ["nextMessage", "codeLength"]
            },
            "SignUpProviderResponseDto": {
                "type": "object",
                "properties": {
                    "provider": {
                        "type": "string",
                        "enum": ["atlas", "firebase"]
                    }
                },
                "required": ["provider"]
            },
            "SignupVerifyDto": {
                "type": "object",
                "properties": {
                    "smsToken": {
                        "type": "string"
                    },
                    "phoneNumber": {
                        "type": "string"
                    }
                },
                "required": ["smsToken", "phoneNumber"]
            },
            "SignupVerifyResponseDto": {
                "type": "object",
                "properties": {
                    "accessToken": {
                        "type": "string",
                        "format": "jwt-token"
                    },
                    "isNewUser": {
                        "type": "boolean"
                    }
                },
                "required": ["accessToken", "isNewUser"]
            },
            "RecaptchaResponseDto": {
                "type": "object",
                "properties": {
                    "atlasSiteKey": {
                        "type": "string"
                    },
                    "firebaseSiteKey": {
                        "type": "string"
                    }
                },
                "required": ["atlasSiteKey", "firebaseSiteKey"]
            },
            "MilesCurrencyDto": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "balance": {
                        "type": "number"
                    }
                },
                "required": ["code", "balance"]
            },
            "MilesBalanceDto": {
                "type": "object",
                "properties": {
                    "balance": {
                        "type": "number"
                    },
                    "currency": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MilesCurrencyDto"
                        }
                    }
                },
                "required": ["balance", "currency"]
            },
            "MilesTicketDto": {
                "type": "object",
                "properties": {
                    "price": {
                        "type": "number"
                    },
                    "priceOP": {
                        "type": "number"
                    },
                    "orderID": {
                        "type": "string"
                    }
                },
                "required": ["price", "priceOP", "orderID"]
            },
            "CalculateMilesDto": {
                "type": "object",
                "properties": {
                    "tickets": {
                        "$ref": "#/components/schemas/MilesTicketDto"
                    },
                    "promocode": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string",
                        "enum": ["RUB", "BYN", "UAH"]
                    }
                },
                "required": ["tickets", "currency"]
            },
            "PayByMileDto": {
                "type": "object",
                "properties": {
                    "price": {
                        "type": "number"
                    }
                },
                "required": ["price"]
            },
            "BonusDto": {
                "type": "object",
                "properties": {
                    "price": {
                        "type": "number"
                    },
                    "priceOP": {
                        "type": "number"
                    }
                },
                "required": ["price", "priceOP"]
            },
            "CalculateMilesResponseDto": {
                "type": "object",
                "properties": {
                    "payByMiles": {
                        "$ref": "#/components/schemas/PayByMileDto"
                    },
                    "bonus": {
                        "$ref": "#/components/schemas/BonusDto"
                    }
                },
                "required": ["payByMiles", "bonus"]
            },
            "SyncRequestDto": {
                "type": "object",
                "properties": {
                    "partnerId": {
                        "type": "string"
                    },
                    "event": {
                        "type": "string",
                        "enum": [
                            "created",
                            "cancelled",
                            "reschedule",
                            "scheduled",
                            "car_assign",
                            "confirmed",
                            "other"
                        ]
                    },
                    "gdsOrderId": {
                        "type": "string"
                    }
                },
                "required": ["event", "gdsOrderId"]
            },
            "SyncManyRequestDto": {
                "type": "object",
                "properties": {
                    "partnerId": {
                        "type": "string"
                    },
                    "event": {
                        "type": "string",
                        "enum": [
                            "created",
                            "cancelled",
                            "reschedule",
                            "scheduled",
                            "car_assign",
                            "confirmed",
                            "other"
                        ]
                    },
                    "gdsOrderIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": ["event", "gdsOrderIds"]
            },
            "CalculateLoyaltyDto": {
                "type": "object",
                "properties": {
                    "orderId": {
                        "type": "string"
                    },
                    "promocode": {
                        "type": "string"
                    }
                },
                "required": ["orderId"]
            },
            "CountryDto": {
                "type": "object",
                "properties": {
                    "country": {
                        "type": "string"
                    },
                    "id": {
                        "type": "number"
                    },
                    "latitude": {
                        "type": "number"
                    },
                    "longitude": {
                        "type": "number"
                    }
                },
                "required": ["country"]
            },
            "PositionDto": {
                "type": "object",
                "properties": {
                    "latitude": {
                        "type": "number"
                    },
                    "longitude": {
                        "type": "number"
                    },
                    "direction": {
                        "type": "number"
                    },
                    "timestamp": {
                        "type": "number"
                    }
                },
                "required": ["latitude", "longitude", "direction", "timestamp"]
            },
            "BusLocationDto": {
                "type": "object",
                "properties": {
                    "willBeAvailableIn": {
                        "type": "number"
                    },
                    "available": {
                        "type": "boolean"
                    },
                    "position": {
                        "default": null,
                        "$ref": "#/components/schemas/PositionDto"
                    }
                }
            },
            "UserKarmaCurrencyDto": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "balance": {
                        "type": "number"
                    },
                    "limit": {
                        "type": "number"
                    }
                },
                "required": ["code", "balance", "limit"]
            },
            "UserKarmaResponseDto": {
                "type": "object",
                "properties": {
                    "balance": {
                        "type": "number"
                    },
                    "currency": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserKarmaCurrencyDto"
                        }
                    }
                },
                "required": ["balance", "currency"]
            },
            "BookingInfoDto": {
                "type": "object",
                "properties": {
                    "bookId": {
                        "type": "string"
                    },
                    "source": {
                        "type": "string"
                    }
                },
                "required": ["bookId", "source"]
            },
            "TicketDataDto": {
                "type": "object",
                "properties": {
                    "barcode": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "number": {
                        "type": "string"
                    },
                    "platform": {
                        "type": "string"
                    },
                    "series": {
                        "type": "string"
                    }
                },
                "required": ["id", "number", "series"]
            },
            "AdminTicketHistoryDto": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "unknown",
                            "cancelled",
                            "returned",
                            "created",
                            "partially returned",
                            "booked",
                            "error",
                            "sold"
                        ]
                    },
                    "discount": {
                        "type": "number"
                    }
                }
            },
            "AdminTicketHistory": {
                "type": "object",
                "properties": {
                    "table": {
                        "type": "string"
                    },
                    "action": {
                        "type": "string",
                        "enum": ["create", "update"]
                    },
                    "comment": {
                        "type": "object"
                    },
                    "entityId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "value": {
                        "$ref": "#/components/schemas/AdminTicketHistoryDto"
                    },
                    "previousValue": {
                        "$ref": "#/components/schemas/AdminTicketHistoryDto"
                    }
                },
                "required": [
                    "table",
                    "action",
                    "comment",
                    "entityId",
                    "createdAt",
                    "value",
                    "previousValue"
                ]
            },
            "AdminTicketExtendedResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number"
                    },
                    "data": {
                        "$ref": "#/components/schemas/TicketDataDto"
                    },
                    "onlinePrice": {
                        "type": "number"
                    },
                    "passenger": {
                        "$ref": "#/components/schemas/PassengerDto"
                    },
                    "paid": {
                        "type": "number"
                    },
                    "fee": {
                        "type": "number"
                    },
                    "refunded": {
                        "type": "number"
                    },
                    "url": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "waiting_confirmation",
                            "confirmed",
                            "unknown",
                            "booked",
                            "error",
                            "active",
                            "landing",
                            "cancelled",
                            "expired"
                        ]
                    },
                    "orderId": {
                        "type": "string"
                    },
                    "cancelledAt": {
                        "type": "string"
                    },
                    "discount": {
                        "type": "number"
                    },
                    "history": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdminTicketHistory"
                        }
                    }
                },
                "required": [
                    "id",
                    "price",
                    "data",
                    "onlinePrice",
                    "passenger",
                    "paid",
                    "fee",
                    "refunded",
                    "url",
                    "status",
                    "orderId",
                    "cancelledAt",
                    "discount",
                    "history"
                ]
            },
            "AdminOrderHistoryDto": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "waiting_confirmation",
                            "confirmed",
                            "unknown",
                            "booked",
                            "error",
                            "active",
                            "landing",
                            "cancelled",
                            "expired"
                        ]
                    },
                    "billingInfo": {
                        "$ref": "#/components/schemas/InvoiceDto"
                    },
                    "paymentMethod": {
                        "type": "string",
                        "enum": [
                            "card",
                            "miles",
                            "cash",
                            "reccur",
                            "atlas_promocode"
                        ]
                    },
                    "promocode": {
                        "type": "string"
                    },
                    "loyaltyInfo": {
                        "$ref": "#/components/schemas/CalculateLoyaltyResponseDto"
                    }
                }
            },
            "OrderAdminHistory": {
                "type": "object",
                "properties": {
                    "table": {
                        "type": "string"
                    },
                    "action": {
                        "type": "string",
                        "enum": ["create", "update"]
                    },
                    "comment": {
                        "type": "object"
                    },
                    "entityId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "value": {
                        "$ref": "#/components/schemas/AdminOrderHistoryDto"
                    },
                    "previousValue": {
                        "$ref": "#/components/schemas/AdminOrderHistoryDto"
                    }
                },
                "required": [
                    "table",
                    "action",
                    "comment",
                    "entityId",
                    "createdAt",
                    "value",
                    "previousValue"
                ]
            },
            "OrderAdminExtendedResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "waiting_confirmation",
                            "confirmed",
                            "unknown",
                            "booked",
                            "error",
                            "active",
                            "landing",
                            "cancelled",
                            "expired"
                        ]
                    },
                    "bookingInfo": {
                        "$ref": "#/components/schemas/BookingInfoDto"
                    },
                    "rideInfo": {
                        "$ref": "#/components/schemas/RideDto"
                    },
                    "expirationDateTime": {
                        "type": "string"
                    },
                    "onlinePrice": {
                        "type": "number"
                    },
                    "price": {
                        "type": "number"
                    },
                    "billingInfo": {
                        "$ref": "#/components/schemas/InvoiceDto"
                    },
                    "paymentMethod": {
                        "type": "string"
                    },
                    "promocode": {
                        "type": "string"
                    },
                    "arrived": {
                        "type": "boolean"
                    },
                    "departure": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "arrival": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "loyaltyInfo": {
                        "$ref": "#/components/schemas/CalculateLoyaltyResponseDto"
                    },
                    "cancelledAt": {
                        "type": "string"
                    },
                    "source": {
                        "type": "string"
                    },
                    "dischargeStop": {
                        "$ref": "#/components/schemas/StopsDto"
                    },
                    "pickupStop": {
                        "$ref": "#/components/schemas/StopsDto"
                    },
                    "pickupDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "userId": {
                        "type": "number"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserDto"
                    },
                    "tickets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdminTicketExtendedResponse"
                        }
                    },
                    "saasPartner": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "history": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderAdminHistory"
                        }
                    }
                },
                "required": [
                    "id",
                    "status",
                    "bookingInfo",
                    "rideInfo",
                    "expirationDateTime",
                    "onlinePrice",
                    "price",
                    "billingInfo",
                    "paymentMethod",
                    "promocode",
                    "arrived",
                    "departure",
                    "arrival",
                    "loyaltyInfo",
                    "cancelledAt",
                    "source",
                    "dischargeStop",
                    "pickupStop",
                    "pickupDate",
                    "userId",
                    "user",
                    "tickets",
                    "saasPartner",
                    "createdAt",
                    "history"
                ]
            },
            "AdminUpdateUserRolesDto": {
                "type": "object",
                "properties": {
                    "roles": {
                        "type": "array",
                        "description": "Роли SaaS юзера",
                        "items": {
                            "type": "string",
                            "enum": ["admin", "partner"]
                        }
                    },
                    "saasPartner": {
                        "type": "string"
                    }
                },
                "required": ["roles"]
            },
            "SocauthProviderDto": {
                "type": "object",
                "properties": {
                    "logo": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "redirectUrl": {
                        "type": "string"
                    }
                },
                "required": ["logo", "name", "redirectUrl"]
            },
            "SaasApiGetUsersBodyDto": {
                "type": "object",
                "properties": {}
            },
            "SaaSApiUpdateUserBodyDto": {
                "type": "object",
                "properties": {
                    "phoneNumber": {
                        "type": "number"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "birthday": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    }
                },
                "required": ["phoneNumber", "lastName", "email"]
            },
            "SaaSApiCreateUserBodyDto": {
                "type": "object",
                "properties": {
                    "phoneNumber": {
                        "type": "number"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "birthday": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    }
                },
                "required": ["phoneNumber", "email"]
            },
            "AddDto": {
                "type": "object",
                "properties": {
                    "firstname": {
                        "type": "string"
                    },
                    "lastname": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "mobile": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "brandName": {
                        "type": "string"
                    },
                    "text": {
                        "type": "string"
                    },
                    "attachments": {
                        "type": "object"
                    }
                },
                "required": [
                    "firstname",
                    "lastname",
                    "email",
                    "mobile",
                    "domain",
                    "text"
                ]
            },
            "AddResponseDto": {
                "type": "object",
                "properties": {}
            },
            "AnalyticsDTO": {
                "type": "object",
                "properties": {}
            }
        }
    },
    "externalDocs": {
        "description": "/openapi/swagger.json",
        "url": "http://undefined/api/openapi/swagger.json"
    },
    "paths": {
        "/search": {
            "get": {
                "operationId": "searchRides",
                "summary": "",
                "parameters": [
                    {
                        "name": "from_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "to_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "calendar_width",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "passengers",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "time",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-project-identifier",
                        "required": true,
                        "in": "header",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResultDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["Search"]
            }
        },
        "/search/suggest": {
            "get": {
                "operationId": "getSuggestions",
                "summary": "",
                "parameters": [
                    {
                        "name": "user_input",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "from_id",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "to_id",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ip",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "locale",
                        "required": false,
                        "in": "query",
                        "default": "ru",
                        "schema": {
                            "enum": ["en", "ru", "be", "pl", "lt", "lv", "de"],
                            "type": "string"
                        }
                    },
                    {
                        "name": "accept-language",
                        "required": true,
                        "in": "header",
                        "schema": {
                            "enum": ["en", "ru", "be", "pl", "lt", "lv", "de"],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SuggestResultDto"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["Search"]
            }
        },
        "/search/partners": {
            "get": {
                "operationId": "getPartnersContacts",
                "summary": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AtlasPartnerContactsDto"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["Search"]
            }
        },
        "/history": {
            "get": {
                "operationId": "getUserHistory",
                "summary": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SearchHistoryDto"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": ["History"]
            }
        },
        "/user": {
            "get": {
                "operationId": "getUser",
                "summary": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["User"]
            },
            "put": {
                "operationId": "updateUser",
                "summary": "",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserRequestDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": ["User"]
            }
        },
        "/user/remove/{phone}": {
            "post": {
                "operationId": "deleteUser",
                "summary": "",
                "parameters": [
                    {
                        "name": "phone",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoveUserDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": ["User"]
            }
        },
        "/user/documents": {
            "get": {
                "operationId": "getPersonalData",
                "summary": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PersonalDataDto"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": ["User"]
            },
            "delete": {
                "operationId": "deletePersonalData",
                "summary": "",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PersonalDataDto"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": ["User"]
            }
        },
        "/user/cards": {
            "get": {
                "operationId": "getCards",
                "summary": "",
                "parameters": [
                    {
                        "name": "currency",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "acquiring",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CardDto"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": ["User"]
            }
        },
        "/user/cards/{id}": {
            "delete": {
                "operationId": "deleteCard",
                "summary": "",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": ["User"]
            }
        },
        "/user/policy": {
            "put": {
                "operationId": "updateUserPolicyVersion",
                "summary": "",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserPolicyDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": ["User"]
            }
        },
        "/user/referral": {
            "get": {
                "operationId": "getUserReferralPromocode",
                "summary": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserReferralPromocodeDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["User"]
            }
        },
        "/saas": {
            "get": {
                "operationId": "getSaasConfig",
                "summary": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SaaSConfigDto"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": ["SAAS"]
            },
            "post": {
                "operationId": "createSaasConfig",
                "summary": "Creates new saas config",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SaaSConfigDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": ["SAAS"]
            }
        },
        "/saas/current": {
            "get": {
                "operationId": "getSaasCurrentConfig",
                "summary": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SaaSConfigDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["SAAS"]
            }
        },
        "/saas/{partner}": {
            "get": {
                "operationId": "getSaasConfig",
                "summary": "",
                "parameters": [
                    {
                        "name": "partner",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SaaSConfigDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["SAAS"]
            },
            "put": {
                "operationId": "updateSaasConfig",
                "summary": "Updates saas config",
                "parameters": [
                    {
                        "name": "partner",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SaaSConfigDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["SAAS"]
            }
        },
        "/saas/app-version": {
            "post": {
                "operationId": "getSaasAppUpdateConfig",
                "summary": "",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SaaSAppVersionDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SaaSConfigVersionsDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["SAAS"]
            }
        },
        "/saas/policy": {
            "post": {
                "operationId": "getSaasPolicyConfig",
                "summary": "",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SaaSPolicyDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SaaSConfigVersionsDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["SAAS"]
            }
        },
        "/orders": {
            "post": {
                "operationId": "bookTicket",
                "summary": "",
                "parameters": [
                    {
                        "name": "x-application-source",
                        "required": true,
                        "in": "header",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-Application-Source",
                        "in": "header",
                        "schema": {
                            "enum": ["web", "app"],
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BookTicketDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookTicketResponseDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["Order"]
            },
            "get": {
                "operationId": "getAllOrders",
                "summary": "",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "enum": ["upcoming", "old"],
                            "type": "string"
                        }
                    },
                    {
                        "name": "orderBy",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "enum": ["asc", "desc"],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrdersResponseDto"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": ["Order"]
            }
        },
        "/orders/{id}": {
            "get": {
                "operationId": "verifyBookedTicket",
                "summary": "",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["Order"]
            }
        },
        "/orders/{id}/pay": {
            "post": {
                "operationId": "initializeCardPayment",
                "summary": "",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "redirectUrl",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvoiceDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["Order"]
            }
        },
        "/orders/pay/recurrent": {
            "post": {
                "operationId": "initializeRecurrentPayment",
                "summary": "",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RecurrentPaymentDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponseDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["Order"]
            }
        },
        "/orders/{id}/confirm": {
            "post": {
                "operationId": "confirmOrder",
                "summary": "",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-application-source",
                        "required": true,
                        "in": "header",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderConfirmDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponseDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["Order"]
            }
        },
        "/orders/user/upcoming": {
            "get": {
                "operationId": "getUpcomingTrip",
                "summary": "",
                "parameters": [
                    {
                        "name": "hours",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpcomingTripResponseDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["Order"]
            }
        },
        "/orders/{id}/cancel": {
            "post": {
                "operationId": "cancelOrder",
                "summary": "",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponseDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["Order"]
            }
        },
        "/review": {
            "post": {
                "operationId": "ReviewController_postReview",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateReviewBodyDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": ["Review"]
            },
            "get": {
                "operationId": "ReviewController_getReviews",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListReviewResponseDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["Review"]
            }
        },
        "/review/{orderId}/skip": {
            "post": {
                "operationId": "ReviewController_skipReview",
                "parameters": [
                    {
                        "name": "orderId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": ["Review"]
            }
        },
        "/review/{orderId}": {
            "get": {
                "operationId": "ReviewController_getOrderReview",
                "parameters": [
                    {
                        "name": "orderId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReviewDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": ""
                    }
                },
                "tags": ["Review"]
            }
        },
        "/tickets/{ticketId}/cancel": {
            "post": {
                "operationId": "cancelAndRefund",
                "summary": "",
                "parameters": [
                    {
                        "name": "ticketId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponseDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["Ticket"]
            }
        },
        "/tickets/{ticketId}/calc-refund": {
            "get": {
                "operationId": "calculateRefundAmount",
                "summary": "",
                "parameters": [
                    {
                        "name": "ticketId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RefundAmountDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["Ticket"]
            }
        },
        "/rides/{id}": {
            "get": {
                "operationId": "getRide",
                "summary": "",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RideDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDto"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["Ride"]
            }
        },
        "/rides/{id}/book-params": {
            "get": {
                "operationId": "getRideBookParams",
                "summary": "",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "from_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "to_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "calendar_width",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookParamsDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDto"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["Ride"]
            }
        },
        "/rides/{id}/ride-info": {
            "get": {
                "operationId": "getRideInfo",
                "summary": "",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "from_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "to_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "calendar_width",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RideInfoDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDto"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["Ride"]
            }
        },
        "/rides/seating": {
            "post": {
                "operationId": "bookSeatingTemp",
                "summary": "",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SeatingBookReqDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SeatingBookResDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDto"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["Ride"]
            }
        },
        "/seo/{locale}": {
            "get": {
                "operationId": "getSeo",
                "summary": "",
                "parameters": [
                    {
                        "name": "locale",
                        "required": true,
                        "in": "path",
                        "description": "Локаль",
                        "schema": {
                            "type": "string",
                            "enum": ["en", "ru", "be", "pl", "lt", "lv", "de"]
                        }
                    },
                    {
                        "name": "from",
                        "required": true,
                        "in": "query",
                        "description": "Откуда",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "to",
                        "required": true,
                        "in": "query",
                        "description": "Куда",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SeoDtoResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": ""
                    }
                },
                "tags": ["SEO"]
            }
        },
        "/seo/{locale}/list": {
            "get": {
                "operationId": "getSeoList",
                "summary": "",
                "parameters": [
                    {
                        "name": "locale",
                        "required": true,
                        "in": "path",
                        "description": "Локаль",
                        "schema": {
                            "type": "string",
                            "enum": ["en", "ru", "be", "pl", "lt", "lv", "de"]
                        }
                    },
                    {
                        "name": "fromId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromName",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "toId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "toName",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SeoDto"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": ["SEO"]
            }
        },
        "/seo/{locale}/featured": {
            "get": {
                "operationId": "getSeoFeatured",
                "summary": "",
                "parameters": [
                    {
                        "name": "locale",
                        "required": true,
                        "in": "path",
                        "description": "Локаль",
                        "schema": {
                            "type": "string",
                            "enum": ["en", "ru", "be", "pl", "lt", "lv", "de"]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FeaturedResponseDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["SEO"]
            }
        },
        "/auth/code": {
            "post": {
                "operationId": "signup",
                "summary": "",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SignupDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SignupResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDto"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SignupResponseDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["Auth"]
            }
        },
        "/auth/provider/{phoneNumber}": {
            "get": {
                "operationId": "getAuthProvider",
                "summary": "",
                "parameters": [
                    {
                        "name": "phoneNumber",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SignUpProviderResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["Auth"]
            }
        },
        "/auth": {
            "post": {
                "operationId": "signupVerify",
                "summary": "",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SignupVerifyDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SignupVerifyResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["Auth"]
            }
        },
        "/auth/verify": {
            "post": {
                "operationId": "verifyPhoneNumber",
                "summary": "",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SignupDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "reCaptcha verification fail",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["Auth"]
            }
        },
        "/auth/recaptcha": {
            "get": {
                "operationId": "getRecaptchaKeys",
                "summary": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecaptchaResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["Auth"]
            }
        },
        "/miles/balance": {
            "get": {
                "operationId": "getBalance",
                "summary": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MilesBalanceDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["Miles"]
            }
        },
        "/miles/calc": {
            "post": {
                "operationId": "calculateMiles",
                "summary": "",
                "parameters": [
                    {
                        "name": "x-application-source",
                        "required": true,
                        "in": "header",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CalculateMilesDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CalculateMilesResponseDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["Miles"]
            }
        },
        "/sync": {
            "post": {
                "operationId": "SyncController_sync",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SyncRequestDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": ["Sync"]
            }
        },
        "/sync/many": {
            "post": {
                "operationId": "SyncController_syncMany",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SyncManyRequestDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": ["Sync"]
            }
        },
        "/loyalty/calc": {
            "post": {
                "operationId": "calculateLoyalty",
                "summary": "",
                "parameters": [
                    {
                        "name": "x-application-source",
                        "required": true,
                        "in": "header",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CalculateLoyaltyDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CalculateLoyaltyResponseDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["Loyalty"]
            }
        },
        "/location": {
            "get": {
                "operationId": "getCountry",
                "summary": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountryDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["Location"]
            }
        },
        "/location/orders/{id}": {
            "get": {
                "operationId": "getBusGeolocation",
                "summary": "",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "ID заказа",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BusLocationDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["Location"]
            }
        },
        "/location/headers": {
            "get": {
                "operationId": "LocationController_echo",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": ["Location"]
            }
        },
        "/karma": {
            "get": {
                "operationId": "getUserKarma",
                "summary": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserKarmaResponseDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["Karma"]
            }
        },
        "/admin/orders/{id}": {
            "get": {
                "operationId": "getOrder",
                "summary": "",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderAdminExtendedResponse"
                                }
                            }
                        }
                    }
                },
                "tags": ["Admin"]
            }
        },
        "/admin/orders": {
            "get": {
                "operationId": "findOrders",
                "summary": "",
                "parameters": [
                    {
                        "name": "phoneNumber",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "default": 30,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "default": 0,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "ticketId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orderId",
                        "required": false,
                        "in": "query",
                        "format": "uuid",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrdersResponseDto"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": ["Admin"]
            }
        },
        "/admin/saas-users": {
            "get": {
                "operationId": "getSaaSUsers",
                "summary": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserDto"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": ["Admin"]
            }
        },
        "/admin/saas-user/{phoneNumber}": {
            "get": {
                "operationId": "getSaaSUser",
                "summary": "",
                "parameters": [
                    {
                        "name": "phoneNumber",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["Admin"]
            }
        },
        "/admin/saas-user/roles/{phoneNumber}": {
            "put": {
                "operationId": "updateSaaSUserRoles",
                "summary": "",
                "parameters": [
                    {
                        "name": "phoneNumber",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminUpdateUserRolesDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserDto"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": ["Admin"]
            }
        },
        "/admin/saas-user/{phone}/revoke": {
            "put": {
                "operationId": "revokeUser",
                "summary": "",
                "parameters": [
                    {
                        "name": "phone",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponseDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["Admin"]
            }
        },
        "/feed": {
            "get": {
                "operationId": "FeedController_getFeed",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": ["Feed"]
            }
        },
        "/socauth/{type}": {
            "get": {
                "operationId": "SocauthController_auth",
                "parameters": [
                    {
                        "name": "type",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "target",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": ["SocAuth"]
            }
        },
        "/socauth/{type}/token": {
            "get": {
                "operationId": "SocauthController_token",
                "parameters": [
                    {
                        "name": "code",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "target",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": ["SocAuth"]
            }
        },
        "/socauth": {
            "get": {
                "operationId": "listSocialauthProviders",
                "summary": "",
                "parameters": [
                    {
                        "name": "target",
                        "required": true,
                        "in": "query",
                        "description": "Адрес для редиректа",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SocauthProviderDto"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": ["SocAuth"]
            }
        },
        "/saas-api/user/{phoneNumber}": {
            "get": {
                "operationId": "SaasApiController_getUser",
                "parameters": [
                    {
                        "name": "phoneNumber",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": ["SAAS-API"]
            }
        },
        "/saas-api/user": {
            "get": {
                "operationId": "SaasApiController_getUsers",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SaasApiGetUsersBodyDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": ["SAAS-API"]
            },
            "put": {
                "operationId": "SaasApiController_updateUser",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SaaSApiUpdateUserBodyDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": ["SAAS-API"]
            },
            "post": {
                "operationId": "SaasApiController_createUser",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SaaSApiCreateUserBodyDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": ["SAAS-API"]
            }
        },
        "/health": {
            "get": {
                "operationId": "HealthController_healthcheck",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/health/uptime": {
            "get": {
                "operationId": "HealthController_uptimeCheck",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/zammad/add": {
            "post": {
                "operationId": "createZammadTicket",
                "summary": "",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddResponseDto"
                                }
                            }
                        }
                    }
                },
                "tags": ["Zammad"]
            }
        },
        "/analytics": {
            "post": {
                "operationId": "AnalyticsController_analytics",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnalyticsDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                }
            }
        }
    }
}
